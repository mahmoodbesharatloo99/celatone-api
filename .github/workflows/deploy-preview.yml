name: Test and Deploy preview
env:
  GIT_SHA: ${{ github.sha }}
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      workspace_name: ${{ steps.set_workspace.outputs.workspace_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Extract Branch Name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')"
      - name: Set Workspace Name
        id: set_workspace
        run: echo "::set-output name=workspace_name::celatone-api-${{ steps.extract_branch.outputs.branch }}"

  Deploy-Preview:
    needs: setup
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - id: auth
        name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          token_format: "access_token"
      - name: Run pytest
        run: |
          pytest
        env:
          PRICE_CACHER_URL: ${{env.PRICE_CACHER_URL}}
          WLD_URL: ${{env.WLD_URL}}
          ALDUS_URL: ${{env.ALDUS_URL}}
      - name: Authenticate to Docker Registry
        run: echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://asia-southeast1-docker.pkg.dev
      - name: Build Celatone API image
        run: |
          docker build -t celatone/api:${{ steps.vars.outputs.sha_short }} .
          docker tag celatone/api:${{ steps.vars.outputs.sha_short }} asia-southeast1-docker.pkg.dev/alles-share/shared-docker-images/celatone/api:${{ steps.vars.outputs.sha_short }}
      - name: Push Celatone API image
        run: docker push asia-southeast1-docker.pkg.dev/alles-share/shared-docker-images/celatone/api:${{ steps.vars.outputs.sha_short }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraforming
        working-directory: ./infrastructure
        run: |
          terraform init
          terraform workspace select ${{ needs.setup.outputs.workspace_name }} || terraform workspace new ${{ needs.setup.outputs.workspace_name }}
          terraform apply -var-file=deploy-preview.tfvars -var="image_url=asia-southeast1-docker.pkg.dev/alles-share/shared-docker-images/celatone/api:${{ steps.vars.outputs.sha_short }}" -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  Destroy-Preview:
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - id: auth
        name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          token_format: "access_token"
      - name: Terraform Destroy
        working-directory: ./infrastructure
        run: |
          terraform init
          terraform workspace select ${{ needs.setup.outputs.workspace_name }}
          terraform destroy -var-file=deploy-preview.tfvars -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
